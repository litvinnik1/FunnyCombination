package com.example.funnycombination.viewmodel

import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.lifecycle.ViewModel
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlin.random.Random

sealed class GameState {
    object ShowingSequence : GameState()
    object WaitingForInput : GameState()
    object GameOver : GameState()
}

class GameViewModel : ViewModel() {
    private val emojis = listOf("üòÄ", "üê±", "üçï", "üöó", "‚öΩ")
    private val _sequence = mutableListOf<String>()
    private val _userInput = mutableListOf<String>()
    var level by mutableStateOf(1)
        private set
    var gameState by mutableStateOf<GameState>(GameState.ShowingSequence)
        private set
    val sequence: List<String> get() = _sequence
    val userInput: List<String> get() = _userInput
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∏—Ö —Ä—ñ–≤–Ω—ñ–≤)
    val currentScore: Int get() = level - 1

    fun startGame() {
        _sequence.clear()
        _userInput.clear()
        level = 1
        addToSequence()
        gameState = GameState.ShowingSequence
    }

    fun addToSequence() {
        _sequence.add(emojis.random())
        _userInput.clear()
    }

    fun onSequenceShown() {
        gameState = GameState.WaitingForInput
    }

    fun onEmojiClick(emoji: String) {
        if (gameState != GameState.WaitingForInput) return
        if (_sequence.isEmpty()) return // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –ø–æ—Ä–æ–∂–Ω—å–æ—ó –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ
        _userInput.add(emoji)
        val idx = _userInput.size - 1
        if (idx >= _sequence.size || _sequence[idx] != emoji) {
            gameState = GameState.GameOver
            return
        }
        if (_userInput.size == _sequence.size) {
            level++
            addToSequence()
            gameState = GameState.ShowingSequence
        }
    }

    fun resetGame() {
        startGame()
    }
} 